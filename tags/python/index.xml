<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on sundingyi.com</title>
    <link>https://sundingyi.com/tags/python/</link>
    <description>Recent content in Python on sundingyi.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 27 Jun 2020 14:19:44 +0800</lastBuildDate>
    
	<atom:link href="https://sundingyi.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python基础</title>
      <link>https://sundingyi.com/blog/python%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 27 Jun 2020 14:19:44 +0800</pubDate>
      
      <guid>https://sundingyi.com/blog/python%E5%9F%BA%E7%A1%80/</guid>
      <description>Python历史  1989年圣诞节：Guido von Rossum开始写Python语言的编译器。 1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，还有对列表、字典等核心数据类型，同时支持以模块为基础来构造应用程序。 1994年1月：Python 1.0正式发布。 2000年10月16日：Python 2.0发布，增加了完整的垃圾回收，提供了对Unicode的支持。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。 2008年12月3日：Python 3.0发布，它并不完全兼容之前的Python代码，不过因为目前还有不少公司在项目和运维中使用Python 2.x版本，所以Python 3.x的很多新特性后来也被移植到Python 2.6/2.7版本中。  更详细的历史：《Python简史》
 变量  整形：Python可以处理任意大小的整数，在Python3中只有int。并且支持二进制（0b开头），八进制（0o开头），十进制，十六进制（0x开头）。 浮点型：小数。浮点指的是在用科学计数法表示时，小数点是可以浮动的。支持科学计数法（1.11e2）。 字符串型：以&#39;&#39;或&amp;quot;&amp;quot;括起来。用&#39;&#39;&#39; &#39;&#39;&#39;的表示方法可以多行。 布尔型： True和 False，布尔运算亦可以得出布尔型。 复数型：如1+1j，并不常用。  给变量命名  硬性规则： 字母数字下划线组成，数字不能开头。 大小写区分 不要用关键字 PEP 8规则： 用小写字母拼写，多个单词用下划线连接。 受保护的实例属性用单个下划线开头。 私有的实例属性用两个下划线开头。  变量的转换   int()：将一个数值或字符串转换成整数，可以指定进制。
  float()：将一个字符串转换成浮点数。
  str()：将指定的对象转换成字符串形式，可以指定编码。
  chr()：将整数转换成该编码对应的字符串（一个字符）。
  ord()：将字符串（一个字符）转换成对应的编码（整数）。
  分支结构 if 关键词有if,elif,else
#英制单位英寸和公制单位厘米互换 value = float(input(&amp;#39;输入长度：&amp;#39;)) unit = input(&amp;#39;输入单位：&amp;#39;) if unit == &amp;#39;in&amp;#39; or unit == &amp;#39;英寸&amp;#39;: print(str(value) + &amp;#39;英寸=&amp;#39; + str(value * 2.</description>
    </item>
    
  </channel>
</rss>